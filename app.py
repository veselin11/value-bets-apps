import streamlit as st
import pandas as pd
from datetime import date, timedelta
from st_aggrid import AgGrid, GridOptionsBuilder, GridUpdateMode, JsCode

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
if "bank" not in st.session_state:
    st.session_state.bank = 340

if "bets" not in st.session_state:
    # –î–æ–±–∞–≤—è–º–µ –ø—Ä–∏–º–µ—Ä–Ω–∏ –ø—Ä–æ–≥–Ω–æ–∑–∏
    st.session_state.bets = [
        {
            "–î–∞—Ç–∞": str(date.today() - timedelta(days=1)),
            "–ú–∞—á": "Malmo - Saburtalo",
            "–ü—Ä–æ–≥–Ω–æ–∑–∞": "–ù–∞–¥ 2.5",
            "–ö–æ–µ—Ñ": 1.60,
            "–°—É–º–∞": 20,
            "–†–µ–∑—É–ª—Ç–∞—Ç": "–ü–µ—á–µ–ª–∏",
            "–û–±–æ—Å–Ω–æ–≤–∫–∞": "Malmo –±–µ–ª–µ–∂–∏ –º–Ω–æ–≥–æ —É –¥–æ–º–∞. Saburtalo –¥–æ–ø—É—Å–∫–∞ –ø–æ–Ω–µ 2 –≥–æ–ª–∞ –≤ 5 –æ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏—Ç–µ 6 –º–∞—á–∞."
        },
        {
            "–î–∞—Ç–∞": str(date.today() - timedelta(days=1)),
            "–ú–∞—á": "Ava√≠ - Amazonas",
            "–ü—Ä–æ–≥–Ω–æ–∑–∞": "1",
            "–ö–æ–µ—Ñ": 2.30,
            "–°—É–º–∞": 20,
            "–†–µ–∑—É–ª—Ç–∞—Ç": "–ì—É–±–∏",
            "–û–±–æ—Å–Ω–æ–≤–∫–∞": "Ava√≠ –±—è—Ö–∞ –≤ –¥–æ–±—Ä–∞ —Ñ–æ—Ä–º–∞ —É –¥–æ–º–∞, –¥–æ–∫–∞—Ç–æ Amazonas —Å–∞ —Å–ª–∞–±–∏ –≥–æ—Å—Ç–∏."
        },
        {
            "–î–∞—Ç–∞": str(date.today()),
            "–ú–∞—á": "Kairat - Olimpija",
            "–ü—Ä–æ–≥–Ω–æ–∑–∞": "–ü–æ–¥ 2.5",
            "–ö–æ–µ—Ñ": 1.65,
            "–°—É–º–∞": 40,
            "–†–µ–∑—É–ª—Ç–∞—Ç": "–û—á–∞–∫–≤–∞ —Å–µ",
            "–û–±–æ—Å–Ω–æ–≤–∫–∞": "–ò –¥–≤–∞—Ç–∞ –æ—Ç–±–æ—Ä–∞ –∏–≥—Ä–∞—è—Ç –ø—Ä–µ–¥–ø–∞–∑–ª–∏–≤–æ –≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∏ –º–∞—á–æ–≤–µ. –ú–∞–ª–∫–æ –≥–æ–ª–æ–≤–µ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ç–µ –∏–º —Å—Ä–µ—â–∏."
        },
    ]

# –ó–∞–≥–ª–∞–≤–∏–µ
st.title("‚öΩ –ü—Ä–æ–≥–Ω–æ–∑–∏ –∏ –∏—Å—Ç–æ—Ä–∏—è –Ω–∞ –∑–∞–ª–æ–∑–∏—Ç–µ")

# –î–∞–Ω–Ω–∏
df = pd.DataFrame(st.session_state.bets)

# –°—Ç–∏–ª –∑–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏—Ç–µ
cell_style = JsCode("""
function(params) {
    if (params.value === '–ü–µ—á–µ–ª–∏') {
        return { 'backgroundColor': '#e0ffe0' }
    } else if (params.value === '–ì—É–±–∏') {
        return { 'backgroundColor': '#ffe0e0' }
    }
    return {};
}
""")

# Grid –æ–ø—Ü–∏–∏
gb = GridOptionsBuilder.from_dataframe(df)
gb.configure_column("–†–µ–∑—É–ª—Ç–∞—Ç", cellStyle=cell_style)
gb.configure_selection(selection_mode="single", use_checkbox=False)
grid_options = gb.build()

# –¢–∞–±–ª–∏—Ü–∞
st.subheader("üìã –¢–∞–±–ª–∏—Ü–∞ —Å –ø—Ä–æ–≥–Ω–æ–∑–∏")
grid_response = AgGrid(
    df,
    gridOptions=grid_options,
    update_mode=GridUpdateMode.SELECTION_CHANGED,
    fit_columns_on_grid_load=True,
    enable_enterprise_modules=False
)

# –û–±–æ—Å–Ω–æ–≤–∫–∞ –ø—Ä–∏ –∏–∑–±–æ—Ä
selected = grid_response["selected_rows"]
if selected:
    st.subheader("üìå –û–±–æ—Å–Ω–æ–≤–∫–∞ –∑–∞ –∏–∑–±—Ä–∞–Ω –º–∞—á")
    st.markdown(f"**{selected[0]['–ú–∞—á']}** ‚Äî _{selected[0]['–î–∞—Ç–∞']}_")
    st.write(selected[0]["–û–±–æ—Å–Ω–æ–≤–∫–∞"])

# –ë–∞–Ω–∫–∞
st.subheader("üí∞ –ê–∫—Ç—É–∞–ª–Ω–∞ –±–∞–Ω–∫–∞")
bank = st.session_state.bank
st.metric("–û—Å—Ç–∞—Ç—ä–∫", f"{bank:.2f} –ª–≤")

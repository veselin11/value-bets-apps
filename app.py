import streamlit as st
import pandas as pd
from datetime import date, timedelta

# –î–∞–Ω–Ω–∏ ‚Äì —Å–∞–º–æ —Ä–µ–∞–ª–Ω–∏—Ç–µ –º–∞—á–æ–≤–µ, –∫–æ–∏—Ç–æ –Ω–∞–∏—Å—Ç–∏–Ω–∞ —Å–∞ –∏–≥—Ä–∞–Ω–∏ –∏–ª–∏ –ø—Ä–µ–¥—Å—Ç–æ—è—Ç
def get_real_predictions():
    return [
        {"–î–∞—Ç–∞": str(date.today() - timedelta(days=1)), "–ú–∞—á": "Elfsborg - Molde", "–ü—Ä–æ–≥–Ω–æ–∑–∞": "–ì–ì", "–ö–æ–µ—Ñ": 1.85, "–°—É–º–∞": 20, "–†–µ–∑—É–ª—Ç–∞—Ç": "‚úÖ –ü–µ—á–µ–ª–∏–≤—à",
         "–û–±–æ—Å–Ω–æ–≤–∫–∞": "–ò –¥–≤–∞—Ç–∞ –æ—Ç–±–æ—Ä–∞ –ø–æ–∫–∞–∑–≤–∞—Ç –≤–∏—Å–æ–∫–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–Ω–æ—Å—Ç, –∞ Molde –±–µ–ª–µ–∂–∏ —Å—Ä–µ–¥–Ω–æ –Ω–∞–¥ 1.5 –≥–æ–ª–∞ –∫–∞—Ç–æ –≥–æ—Å—Ç."},
        {"–î–∞—Ç–∞": str(date.today() - timedelta(days=1)), "–ú–∞—á": "AIK - Kalmar", "–ü—Ä–æ–≥–Ω–æ–∑–∞": "1", "–ö–æ–µ—Ñ": 1.75, "–°—É–º–∞": 30, "–†–µ–∑—É–ª—Ç–∞—Ç": "‚úÖ –ü–µ—á–µ–ª–∏–≤—à",
         "–û–±–æ—Å–Ω–æ–≤–∫–∞": "AIK –µ —Å–∏–ª–µ–Ω –¥–æ–º–∞–∫–∏–Ω –∏ —Å–µ –Ω–∞–º–∏—Ä–∞ –≤—ä–≤ –≤—ä–∑—Ö–æ–¥, –¥–æ–∫–∞—Ç–æ Kalmar –µ –≤ —Å–ª–∞–±–∞ —Ñ–æ—Ä–º–∞ –∏ —Å –∫–∞–¥—Ä–æ–≤–∏ –ø—Ä–æ–±–ª–µ–º–∏."},
        {"–î–∞—Ç–∞": str(date.today() - timedelta(days=1)), "–ú–∞—á": "Avai - Coritiba", "–ü—Ä–æ–≥–Ω–æ–∑–∞": "1", "–ö–æ–µ—Ñ": 2.00, "–°—É–º–∞": 20, "–†–µ–∑—É–ª—Ç–∞—Ç": "‚ùå –ì—É–±–µ—â",
         "–û–±–æ—Å–Ω–æ–≤–∫–∞": "Avai –∑–∞–ø–∞–∑–≤–∞ —Å—Ç–∞–±–∏–ª–Ω–æ—Å—Ç —É –¥–æ–º–∞ –∏ –∏–º–∞ –¥–æ–±—ä—Ä –±–∞–ª–∞–Ω—Å —Å—Ä–µ—â—É Coritiba."},

        {"–î–∞—Ç–∞": str(date.today()), "–ú–∞—á": "Kairat - Olimpija", "–ü—Ä–æ–≥–Ω–æ–∑–∞": "–ü–æ–¥ 2.5", "–ö–æ–µ—Ñ": 1.65, "–°—É–º–∞": 40, "–†–µ–∑—É–ª—Ç–∞—Ç": "–û—á–∞–∫–≤–∞ —Å–µ",
         "–û–±–æ—Å–Ω–æ–≤–∫–∞": "–ò –¥–≤–∞—Ç–∞ –æ—Ç–±–æ—Ä–∞ –∏–≥—Ä–∞—è—Ç –¥–µ—Ñ–∞–Ω–∑–∏–≤–Ω–æ –≤ –µ–≤—Ä–æ—Ç—É—Ä–Ω–∏—Ä–∏—Ç–µ, –æ—á–∞–∫–≤–∞ —Å–µ –ø—Ä–µ–¥–ø–∞–∑–ª–∏–≤ –ø–æ–¥—Ö–æ–¥."},
        {"–î–∞—Ç–∞": str(date.today()), "–ú–∞—á": "Malmo - Saburtalo", "–ü—Ä–æ–≥–Ω–æ–∑–∞": "–ù–∞–¥ 2.5", "–ö–æ–µ—Ñ": 1.60, "–°—É–º–∞": 20, "–†–µ–∑—É–ª—Ç–∞—Ç": "–û—á–∞–∫–≤–∞ —Å–µ",
         "–û–±–æ—Å–Ω–æ–≤–∫–∞": "Malmo –∏–≥—Ä–∞–µ –æ—Ñ–∞–Ω–∑–∏–≤–Ω–æ —É –¥–æ–º–∞, –∞ Saburtalo –¥–æ–ø—É—Å–∫–∞ –≥–æ–ª–æ–≤–µ –ø–æ—á—Ç–∏ –≤—ä–≤ –≤—Å–µ–∫–∏ –º–∞—á."},
        {"–î–∞—Ç–∞": str(date.today()), "–ú–∞—á": "Uruguay W - Argentina W", "–ü—Ä–æ–≥–Ω–æ–∑–∞": "1", "–ö–æ–µ—Ñ": 2.00, "–°—É–º–∞": 10, "–†–µ–∑—É–ª—Ç–∞—Ç": "–û—á–∞–∫–≤–∞ —Å–µ",
         "–û–±–æ—Å–Ω–æ–≤–∫–∞": "–£—Ä—É–≥–≤–∞–π –µ –≤ –ø–æ-–¥–æ–±—Ä–∞ —Ñ–æ—Ä–º–∞ –∏ –∏–º–∞ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ –ø—Ä–µ–¥–∏–º—Å—Ç–≤–æ —Å–ª–µ–¥ –ø—Ä–µ–¥–∏—à–Ω–∏ –ø–æ–±–µ–¥–∏."}
    ]

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
if 'initial_bank' not in st.session_state:
    st.session_state.initial_bank = 340

if 'df' not in st.session_state:
    st.session_state.df = pd.DataFrame(get_real_predictions())

df = st.session_state.df

st.title("üìä –†–µ–∞–ª–Ω–∏ –ø—Ä–æ–≥–Ω–æ–∑–∏ –∏ –æ–±–æ—Å–Ω–æ–≤–∫–∞")

# –ò–∑—á–∏—Å–ª—è–≤–∞–Ω–µ –Ω–∞ —Ç–µ–∫—É—â–∞ –±–∞–Ω–∫–∞
bank = st.session_state.initial_bank
for _, row in df.iterrows():
    if row["–†–µ–∑—É–ª—Ç–∞—Ç"] == "‚úÖ –ü–µ—á–µ–ª–∏–≤—à":
        bank += row["–°—É–º–∞"] * row["–ö–æ–µ—Ñ"] - row["–°—É–º–∞"]
    elif row["–†–µ–∑—É–ª—Ç–∞—Ç"] == "‚ùå –ì—É–±–µ—â":
        bank -= row["–°—É–º–∞"]

st.subheader("üí∞ –ê–∫—Ç—É–∞–ª–Ω–∞ –±–∞–Ω–∫–∞")
st.metric("–ë–∞–ª–∞–Ω—Å", f"{bank:.2f} –ª–≤")

# –ü–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ç–µ —Å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–µ–Ω –∏–∑–±–æ—Ä
st.subheader("üìã –ü—Ä–æ–≥–Ω–æ–∑–∏")
selected_index = st.data_editor(
    df.drop("–û–±–æ—Å–Ω–æ–≤–∫–∞", axis=1),
    use_container_width=True,
    column_config={"–î–∞—Ç–∞": st.column_config.TextColumn(label="–î–∞—Ç–∞")},
    disabled=True,
    hide_index=True,
    num_rows="dynamic",
    key="match_selector"
)

# –ü–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ –æ–±–æ—Å–Ω–æ–≤–∫–∞ –∑–∞ –∏–∑–±—Ä–∞–Ω —Ä–µ–¥ (–∞–∫–æ –∏–º–∞ —Å–µ–ª–µ–∫—Ü–∏—è)
if selected_index and isinstance(selected_index, list):
    index = selected_index[0]
    selected_row = df.iloc[index]
    st.markdown(f"""
    ### üß† –û–±–æ—Å–Ω–æ–≤–∫–∞ –∑–∞ **{selected_row['–ú–∞—á']}**
    - üìÖ –î–∞—Ç–∞: {selected_row['–î–∞—Ç–∞']}
    - üéØ –ü—Ä–æ–≥–Ω–æ–∑–∞: **{selected_row['–ü—Ä–æ–≥–Ω–æ–∑–∞']}**
    - üí∏ –ö–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç: {selected_row['–ö–æ–µ—Ñ']}
    - üí∞ –ó–∞–ª–æ–≥: {selected_row['–°—É–º–∞']} –ª–≤
    - üìä –û–±–æ—Å–Ω–æ–≤–∫–∞:
        > {selected_row['–û–±–æ—Å–Ω–æ–≤–∫–∞']}
    """)
else:
    st.info("–ò–∑–±–µ—Ä–∏ –º–∞—á –æ—Ç —Ç–∞–±–ª–∏—Ü–∞—Ç–∞, –∑–∞ –¥–∞ –≤–∏–¥–∏—à –æ–±–æ—Å–Ω–æ–≤–∫–∞—Ç–∞.")

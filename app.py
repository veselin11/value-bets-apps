import streamlit as st
import pandas as pd
from datetime import date, timedelta

# –î–∞–Ω–Ω–∏ ‚Äì —Ä–µ–∞–ª–Ω–∏ –ø—Ä–æ–≥–Ω–æ–∑–∏ —Å –æ–±–æ—Å–Ω–æ–≤–∫–∏
def get_real_predictions():
    return [
        {"–î–∞—Ç–∞": str(date.today() - timedelta(days=1)), "–ú–∞—á": "Elfsborg - Molde", "–ü—Ä–æ–≥–Ω–æ–∑–∞": "–ì–ì", "–ö–æ–µ—Ñ": 1.85, "–°—É–º–∞": 20, "–†–µ–∑—É–ª—Ç–∞—Ç": "‚úÖ –ü–µ—á–µ–ª–∏–≤—à",
         "–û–±–æ—Å–Ω–æ–≤–∫–∞": "–ò –¥–≤–∞—Ç–∞ –æ—Ç–±–æ—Ä–∞ –ø–æ–∫–∞–∑–≤–∞—Ç –≤–∏—Å–æ–∫–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–Ω–æ—Å—Ç, –∞ Molde –±–µ–ª–µ–∂–∏ —Å—Ä–µ–¥–Ω–æ –Ω–∞–¥ 1.5 –≥–æ–ª–∞ –∫–∞—Ç–æ –≥–æ—Å—Ç."},
        {"–î–∞—Ç–∞": str(date.today() - timedelta(days=1)), "–ú–∞—á": "AIK - Kalmar", "–ü—Ä–æ–≥–Ω–æ–∑–∞": "1", "–ö–æ–µ—Ñ": 1.75, "–°—É–º–∞": 30, "–†–µ–∑—É–ª—Ç–∞—Ç": "‚úÖ –ü–µ—á–µ–ª–∏–≤—à",
         "–û–±–æ—Å–Ω–æ–≤–∫–∞": "AIK –µ —Å–∏–ª–µ–Ω –¥–æ–º–∞–∫–∏–Ω –∏ —Å–µ –Ω–∞–º–∏—Ä–∞ –≤—ä–≤ –≤—ä–∑—Ö–æ–¥, –¥–æ–∫–∞—Ç–æ Kalmar –µ –≤ —Å–ª–∞–±–∞ —Ñ–æ—Ä–º–∞ –∏ —Å –∫–∞–¥—Ä–æ–≤–∏ –ø—Ä–æ–±–ª–µ–º–∏."},
        {"–î–∞—Ç–∞": str(date.today() - timedelta(days=1)), "–ú–∞—á": "Avai - Coritiba", "–ü—Ä–æ–≥–Ω–æ–∑–∞": "1", "–ö–æ–µ—Ñ": 2.00, "–°—É–º–∞": 20, "–†–µ–∑—É–ª—Ç–∞—Ç": "‚ùå –ì—É–±–µ—â",
         "–û–±–æ—Å–Ω–æ–≤–∫–∞": "Avai –∑–∞–ø–∞–∑–≤–∞ —Å—Ç–∞–±–∏–ª–Ω–æ—Å—Ç —É –¥–æ–º–∞ –∏ –∏–º–∞ –¥–æ–±—ä—Ä –±–∞–ª–∞–Ω—Å —Å—Ä–µ—â—É Coritiba."},

        {"–î–∞—Ç–∞": str(date.today()), "–ú–∞—á": "Kairat - Olimpija", "–ü—Ä–æ–≥–Ω–æ–∑–∞": "–ü–æ–¥ 2.5", "–ö–æ–µ—Ñ": 1.65, "–°—É–º–∞": 40, "–†–µ–∑—É–ª—Ç–∞—Ç": "–û—á–∞–∫–≤–∞ —Å–µ",
         "–û–±–æ—Å–Ω–æ–≤–∫–∞": "–ò –¥–≤–∞—Ç–∞ –æ—Ç–±–æ—Ä–∞ –∏–≥—Ä–∞—è—Ç –¥–µ—Ñ–∞–Ω–∑–∏–≤–Ω–æ –≤ –µ–≤—Ä–æ—Ç—É—Ä–Ω–∏—Ä–∏—Ç–µ, –æ—á–∞–∫–≤–∞ —Å–µ –ø—Ä–µ–¥–ø–∞–∑–ª–∏–≤ –ø–æ–¥—Ö–æ–¥."},
        {"–î–∞—Ç–∞": str(date.today()), "–ú–∞—á": "Malmo - Saburtalo", "–ü—Ä–æ–≥–Ω–æ–∑–∞": "–ù–∞–¥ 2.5", "–ö–æ–µ—Ñ": 1.60, "–°—É–º–∞": 20, "–†–µ–∑—É–ª—Ç–∞—Ç": "–û—á–∞–∫–≤–∞ —Å–µ",
         "–û–±–æ—Å–Ω–æ–≤–∫–∞": "Malmo –∏–≥—Ä–∞–µ –æ—Ñ–∞–Ω–∑–∏–≤–Ω–æ —É –¥–æ–º–∞, –∞ Saburtalo –¥–æ–ø—É—Å–∫–∞ –≥–æ–ª–æ–≤–µ –ø–æ—á—Ç–∏ –≤—ä–≤ –≤—Å–µ–∫–∏ –º–∞—á."},
        {"–î–∞—Ç–∞": str(date.today()), "–ú–∞—á": "Uruguay W - Argentina W", "–ü—Ä–æ–≥–Ω–æ–∑–∞": "1", "–ö–æ–µ—Ñ": 2.00, "–°—É–º–∞": 10, "–†–µ–∑—É–ª—Ç–∞—Ç": "–û—á–∞–∫–≤–∞ —Å–µ",
         "–û–±–æ—Å–Ω–æ–≤–∫–∞": "–£—Ä—É–≥–≤–∞–π –µ –≤ –ø–æ-–¥–æ–±—Ä–∞ —Ñ–æ—Ä–º–∞ –∏ –∏–º–∞ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ –ø—Ä–µ–¥–∏–º—Å—Ç–≤–æ —Å–ª–µ–¥ –ø—Ä–µ–¥–∏—à–Ω–∏ –ø–æ–±–µ–¥–∏."}
    ]

# –§—É–Ω–∫—Ü–∏—è –∑–∞ –∏–∑—á–∏—Å–ª—è–≤–∞–Ω–µ –Ω–∞ –±–∞–Ω–∫–∞
def calculate_bank(df, initial_bank):
    bank = initial_bank
    for _, row in df.iterrows():
        if row["–†–µ–∑—É–ª—Ç–∞—Ç"].startswith("‚úÖ"):
            bank += row["–°—É–º–∞"] * row["–ö–æ–µ—Ñ"] - row["–°—É–º–∞"]
        elif row["–†–µ–∑—É–ª—Ç–∞—Ç"].startswith("‚ùå"):
            bank -= row["–°—É–º–∞"]
    return bank

# –§—É–Ω–∫—Ü–∏—è –∑–∞ –æ—Ü–≤–µ—Ç—è–≤–∞–Ω–µ –Ω–∞ —Ä–µ–¥–æ–≤–µ —Å–ø–æ—Ä–µ–¥ —Ä–µ–∑—É–ª—Ç–∞—Ç–∞
def highlight_result(row):
    if row["–†–µ–∑—É–ª—Ç–∞—Ç"].startswith("‚úÖ"):
        return ['background-color: #d4edda'] * len(row)
    elif row["–†–µ–∑—É–ª—Ç–∞—Ç"].startswith("‚ùå"):
        return ['background-color: #f8d7da'] * len(row)
    else:
        return [''] * len(row)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
if 'initial_bank' not in st.session_state:
    st.session_state.initial_bank = 340

if 'df' not in st.session_state:
    st.session_state.df = pd.DataFrame(get_real_predictions())

df = st.session_state.df

st.title("‚öΩ –ü—Ä–æ–≥–Ω–æ–∑–∏ –∏ –æ–±–æ—Å–Ω–æ–≤–∫–∏")

# –ò–∑—á–∏—Å–ª—è–≤–∞–Ω–µ –Ω–∞ —Ç–µ–∫—É—â–∞ –±–∞–Ω–∫–∞ –∏ –∑–∞–ø–∏—Å –≤ —Å–µ—Å–∏—è
st.session_state.bank = calculate_bank(df, st.session_state.initial_bank)

# –ü–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ –±–∞–Ω–∫–∞
st.subheader("üí∞ –ë–∞–Ω–∫–∞")
st.metric("–¢–µ–∫—É—â –±–∞–ª–∞–Ω—Å", f"{st.session_state.bank:.2f} –ª–≤")

# –ü–æ–∫–∞–∑–≤–∞–Ω–µ –Ω–∞ —Ç–∞–±–ª–∏—Ü–∞—Ç–∞ —Å –ø—Ä–æ–≥–Ω–æ–∑–∏, –æ—Ü–≤–µ—Ç–µ–Ω–∞ —Å–ø–æ—Ä–µ–¥ —Ä–µ–∑—É–ª—Ç–∞—Ç
st.subheader("üìã –í—Å–∏—á–∫–∏ –ø—Ä–æ–≥–Ω–æ–∑–∏")
df_styled = df.style.apply(highlight_result, axis=1)
st.dataframe(df_styled, use_container_width=True)

# –ò–∑–±–æ—Ä –Ω–∞ –º–∞—á –∑–∞ –¥–µ—Ç–∞–π–ª–Ω–∞ –æ–±–æ—Å–Ω–æ–≤–∫–∞
st.subheader("üîé –í–∏–∂ –æ–±–æ—Å–Ω–æ–≤–∫–∞ –ø–æ –º–∞—á")

match_options = [f"{row['–î–∞—Ç–∞']} | {row['–ú–∞—á']}" for _, row in df.iterrows()]
selected = st.selectbox("–ò–∑–±–µ—Ä–∏ –º–∞—á", match_options)

selected_row = df.iloc[match_options.index(selected)]

with st.expander(f"üß† –û–±–æ—Å–Ω–æ–≤–∫–∞ –∑–∞ {selected_row['–ú–∞—á']}"):
    st.markdown(f"""
    - üìÖ –î–∞—Ç–∞: {selected_row['–î–∞—Ç–∞']}
    - üéØ –ü—Ä–æ–≥–Ω–æ–∑–∞: **{selected_row['–ü—Ä–æ–≥–Ω–æ–∑–∞']}**
    - üí∏ –ö–æ–µ—Ñ–∏—Ü–∏–µ–Ω—Ç: {selected_row['–ö–æ–µ—Ñ']}
    - üí∞ –ó–∞–ª–æ–≥: {selected_row['–°—É–º–∞']} –ª–≤
    - üìà –†–µ–∑—É–ª—Ç–∞—Ç: {selected_row['–†–µ–∑—É–ª—Ç–∞—Ç']}
    - üìä –û–±–æ—Å–Ω–æ–≤–∫–∞:
    > {selected_row['–û–±–æ—Å–Ω–æ–≤–∫–∞']}
    """)
